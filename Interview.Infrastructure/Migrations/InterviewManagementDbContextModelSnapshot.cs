// <auto-generated />
using System;
using Interview.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interview.Infrastructure.Migrations
{
    [DbContext(typeof(InterviewManagementDbContext))]
    partial class InterviewManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Interview.ApplicationCore.Entity.InterviewFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InterviewFeedbacks");
                });

            modelBuilder.Entity("Interview.ApplicationCore.Entity.InterviewType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterviewTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterviewTypes");
                });

            modelBuilder.Entity("Interview.ApplicationCore.Entity.Interviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FristName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Interviewers");
                });

            modelBuilder.Entity("Interview.ApplicationCore.Entity.Interviews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<int>("InterviewRound")
                        .HasColumnType("int");

                    b.Property<string>("InterviewTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("RecruiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.Property<int?>("interviewTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("RecruiterId");

                    b.HasIndex("interviewTypeId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("Interview.ApplicationCore.Entity.Recruiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FristName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("Interview.ApplicationCore.Entity.Interviews", b =>
                {
                    b.HasOne("Interview.ApplicationCore.Entity.InterviewFeedback", "Feedback")
                        .WithMany()
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interview.ApplicationCore.Entity.Interviewer", "interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interview.ApplicationCore.Entity.Recruiter", "recruiter")
                        .WithMany()
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interview.ApplicationCore.Entity.InterviewType", "interviewType")
                        .WithMany()
                        .HasForeignKey("interviewTypeId");

                    b.Navigation("Feedback");

                    b.Navigation("interviewType");

                    b.Navigation("interviewer");

                    b.Navigation("recruiter");
                });
#pragma warning restore 612, 618
        }
    }
}
